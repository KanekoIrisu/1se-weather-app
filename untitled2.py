# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MQ-ESOJqExVKLAvB3Z2qJ17HK8EV6WLT
"""

import requests
import pandas as pd
import tkinter as tk
from tkinter import ttk, messagebox

# 気象庁APIのエリアコード（例: 東京, 大阪, 名古屋）
area_codes = {
    "東京": "130000",
    "大阪": "270000",
    "名古屋": "230000"
}

# 天気データ取得関数
def get_weather_data(area_code):
    url = f"https://www.jma.go.jp/bosai/forecast/data/forecast/{area_code}.json"
    response = requests.get(url)
    data = response.json()

    weather_data = []
    for i in range(len(data[0]["timeSeries"][0]["timeDefines"])):
        day = data[0]["timeSeries"][0]["timeDefines"][i]
        weather = data[0]["timeSeries"][0]["areas"][0]["weathers"][i]
        weather_data.append({"日付": day, "天気": weather})

    return pd.DataFrame(weather_data)

# GUI作成
root = tk.Tk()
root.title("地域選択付き天気フィルターアプリ")
root.geometry("300x200")

# 地域選択ドロップダウン
selected_area = tk.StringVar()
selected_area.set("東京")  # 初期値
area_menu = ttk.Combobox(root, textvariable=selected_area, values=list(area_codes.keys()))
area_menu.pack(pady=5)

# 天気フィルター関数
def filter_weather(condition):
    area_code = area_codes.get(selected_area.get(), "130000")  # デフォルトは東京
    df = get_weather_data(area_code)
    filtered_days = df[df["天気"].str.contains(condition)]["日付"].tolist()

    if filtered_days:
        messagebox.showinfo(f"{condition}の日", "\n".join(filtered_days))
    else:
        messagebox.showinfo(f"{condition}の日", "該当する日がありません。")

# ボタン作成
tk.Button(root, text="晴れの日", command=lambda: filter_weather("晴れ")).pack(pady=5)
tk.Button(root, text="雨の日", command=lambda: filter_weather("雨")).pack(pady=5)
tk.Button(root, text="曇りの日", command=lambda: filter_weather("曇り")).pack(pady=5)

# GUI実行
root.mainloop()

